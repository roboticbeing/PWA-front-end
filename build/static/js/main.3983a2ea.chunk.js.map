{"version":3,"sources":["Components/Navigation.jsx","Pages/Login.jsx","Pages/Home.jsx","Pages/Register.jsx","Pages/AccountActivation.jsx","Pages/Settings.jsx","Pages/Alerts.jsx","Pages/Emergency.jsx","Pages/Feed.jsx","Pages/Location.jsx","Pages/PeopleList.jsx","Components/Card.jsx","Components/FeedItem.jsx","Components/CreateNews.jsx","api/apiAuth.js","api/apiPath.js","api/apiMethods.js","api/api.js","Pages/ComponentsOverview.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","navClickHandler","event","id","parseInt","target","setState","activeId","item","state","items","find","isBurger","showMobileMenu","isMobile","window","innerWidth","LiCss","a","push","auth","authRoute","showAllways","join","NavLinkCss","props","name","route","css","navRender","this","className","map","index","key","to","onClick","Component","defaultProps","authDefaultProp","Login","userName","fullName","password","passwordConfirm","handleSubmit","bind","preventDefault","db","useraccountsLogin","authLogin","onSubmit","type","onChange","e","value","Home","Register","useraccountsRegister","authRegister","AccountActivation","Settings","MyClass","Emergency","Feed","Location","PeopleList","card","children","FeedItem","Math","floor","random","showPopupHandler","author","category","dateTime","content","html","document","getElementById","innerHTML","alert","CreateNews","hasExpiration","checkboxHandle","checked","disabled","setAuthorizationToken","token","axios","defaults","headers","common","get","localStorage","setItem","JSON","stringify","apiPath","endpoint","axiosConfig","t","baseURL","then","res","console","log","data","post","params","apiAuth","api","config","cloudDomain","create","timeout","testDomain","useraccountsMe","useraccounts","useraccountsActive","persons","personsprotected","feed","feedActive","feedAlerts","feedEvents","feedNews","feedNotice","textcontent","peopleList","ComponentsOverview","email","axiosRegister","axiosLogin","axiosMe","me","Card","isAuthenticated","getItem","Router","exact","path","component","Alerts","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3983a2ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n/* PROPS Documentation:\n\n- \"auth\" prop: true / false: will show different menu items, depending if the user is logged in or not.\n\n*/\nexport default class Navigation extends Component {\n  static defaultProps = {\n    authDefaultProp: false\n  };\n\n  render() {\n    let navRender = null;\n\n    if (this.state.items) {\n      navRender = (\n        <ul className='topnav'>\n          {this.state.items.map((item, index) => {\n            return (\n              <li key={item.id} className={this.LiCss(item)}>\n                <NavLink\n                  to={item.route}\n                  onClick={this.navClickHandler}\n                  key={item.id}\n                  id={item.id + ''}\n                  className={this.NavLinkCss(item)}\n                >\n                  {item.name}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n\n    return (\n      <div>\n        <div>{navRender}</div>\n      </div>\n    );\n  }\n\n  // Methods -------------------------------\n\n  navClickHandler = event => {\n    let id = parseInt(event.target.id);\n    this.setState({ activeId: id });\n    let item = this.state.items.find(item => item.id === id);\n\n    if (item.isBurger && this.state.showMobileMenu === false) {\n      this.setState({\n        showMobileMenu: true\n      });\n    }\n    if (item.isBurger && this.state.showMobileMenu === true) {\n      this.setState({\n        showMobileMenu: false\n      });\n    }\n    if (!item.isBurger) {\n      this.setState({\n        showMobileMenu: false\n      });\n    }\n  };\n\n  isMobile = () => {\n    return window.innerWidth < 600;\n  };\n\n  // CSS -------------------------------\n\n  LiCss = item => {\n    let a = [];\n\n    // Add css to \"Menu burger\"\n    if (item.isBurger) {\n      a.push('nav-menu-button right');\n    }\n    // in mobile, hide the menu items when it is not in use\n    if (!this.state.showMobileMenu && !item.isBurger) {\n      a.push('menu-hidden');\n    }\n    // Show menu items for users that is NOT logged in\n    if (!this.state.auth && item.authRoute && !item.showAllways) {\n      a.push('nav-hidden');\n    }\n    // Show menu items for users that IS logged in\n    if (this.state.auth && !item.authRoute && !item.showAllways) {\n      a.push('nav-hidden');\n    }\n    let res = a.join(' ');\n    return res;\n  };\n\n  NavLinkCss = item => {\n    let a = [];\n    // Color the active menu item green\n    if (item.id === this.state.activeId && !item.isBurger) {\n      a.push('active');\n    }\n\n    return a.join(' ');\n  };\n\n  // State -------------------------------\n  state = {\n    showMobileMenu: false,\n    activeId: null,\n    auth:\n      (this.props.auth === 'true' ? true : false) ||\n      (this.props.auth === true ? true : false),\n    items: [\n      {\n        name: '☰ Menu',\n        authRoute: false,\n        route: '#',\n        isBurger: true,\n        showAllways: true,\n        css: '',\n        id: 1\n      },\n      {\n        name: 'Home',\n        route: '/home',\n        authRoute: false,\n        isBurger: false,\n        showAllways: true,\n        css: '',\n        id: 10\n      },\n      {\n        name: 'Login',\n        route: '/login',\n        authRoute: false,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 11\n      },\n      {\n        name: 'Register',\n        route: '/register',\n        authRoute: false,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 12\n      },\n      {\n        name: 'News',\n        route: '/news',\n        authRoute: true,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 20\n      },\n      {\n        name: 'Location',\n        route: '/location',\n        authRoute: true,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 21\n      },\n      {\n        name: 'Emergency',\n        route: '/emergency',\n        authRoute: true,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 22\n      },\n      {\n        name: 'Alerts',\n        route: '/alerts',\n        authRoute: true,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 23\n      },\n      {\n        name: 'People-list',\n        route: '/people-list',\n        authRoute: true,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 24\n      },\n      {\n        name: 'Feed',\n        route: '/feed',\n        authRoute: true,\n        isBurger: false,\n        showAllways: false,\n        css: '',\n        id: 25\n      },\n      {\n        name: 'Contact',\n        route: '/contact',\n        authRoute: false,\n        isBurger: false,\n        showAllways: true,\n        css: '',\n        id: 26\n      }\n    ]\n  };\n\n  //  -------------------------------\n}\n","import React, { Component } from 'react';\nimport { db } from '../routes';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      fullName: '',\n      password: '',\n      passwordConfirm: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } \n\n  handleSubmit(event) {\n    event.preventDefault();\n    db.useraccountsLogin.authLogin(\n      this.state.userName, \n      this.state.fullName, \n      this.state.password, \n      this.state.passwordConfirm)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            User Name:\n            <input type='text' name='userName'onChange={(e)=>this.setState({userName: e.target.value})}   />\n          </label>\n          <br />\n          <label>\n            Password:\n            <input type='password' name='Password' onChange={(e)=>this.setState({password: e.target.value})}/>\n          </label>\n          <br />\n          <button type='submit' className='btn btn-primary'>\n            Log In\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\n\nclass Home extends Component {\n  render () {\n    return ( \n    \n    <div >\n      Home\n    </div>\n    \n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { db } from '../routes';\n\nclass Register extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      fullName: '',\n      password: '',\n      passwordConfirm: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } \n\n  handleSubmit(event) {\n    event.preventDefault();\n    db.useraccountsRegister.authRegister(\n      this.state.userName, \n      this.state.fullName, \n      this.state.password, \n      this.state.passwordConfirm)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Email:\n            <input type='text' name='userName'  onChange={(e)=>this.setState({userName: e.target.value})}  />\n          </label>\n          <br />\n          <label>\n            Full Name:\n            <input type='text' name='fullName'  onChange={(e)=>this.setState({fullName: e.target.value})}  />\n          </label>\n          <br />\n          <label>\n            Password:\n            <input type='password' name='Password'  onChange={(e)=>this.setState({password: e.target.value})}  />\n          </label>\n          <br />\n          <label>\n            Confirm Password:\n            <input type='password' name='confirmPassword'  onChange={(e)=>this.setState({passwordConfirm: e.target.value})}  />\n          </label>\n          <br />\n          <button type='submit' className='btn btn-primary'>\n            Log In\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react'\n\nclass AccountActivation extends Component {\n  render () {\n    return ( \n    \n    <div >\n      AccountActivation\n    </div>\n    \n    );\n  }\n}\n\nexport default AccountActivation;","import React, { Component } from 'react'\n\nclass Settings extends Component {\n  render () {\n    return ( \n    \n    <div >\n      Settings\n    </div>\n    \n    );\n  }\n}\n\nexport default Settings;","import React, { Component } from 'react'\n\nclass MyClass extends Component {\n  render () {\n    return ( \n    \n    <div >\n      Alerts\n    </div>\n    \n    );\n  }\n}\n\nexport default MyClass;","import React, { Component } from 'react'\n\nclass Emergency extends Component {\n  render () {\n    return ( \n    \n    <div >\n      Emergency\n    </div>\n    \n    );\n  }\n}\n\nexport default Emergency;","import React, { Component } from 'react'\n\nclass Feed extends Component {\n  render () {\n    return ( \n    \n    <div >\n      Feed\n    </div>\n    \n    );\n  }\n}\n\nexport default Feed;","import React, { Component } from 'react'\n\nclass Location extends Component {\n  render () {\n    return ( \n    \n    <div >\n      Location\n    </div>\n    \n    );\n  }\n}\n\nexport default Location;","import React, { Component } from 'react'\n\nclass PeopleList extends Component {\n  render () {\n    return ( \n    \n    <div >\n      PeopleList\n    </div>\n    \n    );\n  }\n}\n\nexport default PeopleList;","\nimport React from 'react'\n\nconst card = (props) => { \n    return <div className=\"Card\">\n            {props.children}\n        </div>\n\n};\n\nexport default card;\n\n\n\n","import React, { Component } from 'react'\n\n/* Copy Paste Code:\n<Card>\n  <FeedItem id=\"5\" author=\"Martin Andersen\" category=\"Alerts\" dateTime=\"2019-12-27\" content=\"<h1>title</h1>\">\n  </FeedItem>\n</Card>\n*/\n\nexport default class FeedItem extends Component {\n\nstate = { id:  'randomId_' + Math.floor((Math.random() * 1000000000000) + 1) };\n\n  render() {\n    return <div>\n      <div className='FeedItemAutorAndBtnContainer'>\n            <div className='FeedItemBtnArea'>\n                <div className='FeedItemBtn' onClick={this.showPopupHandler}>...</div>\n            </div>\n            <div className='FeedItemAuthor'>\n                <div className='FeedItemName'>{this.props.author} ➤ {this.props.category}</div>\n                <div className='FeedItemDate'>{this.props.dateTime}</div>\n                \n            </div>\n      </div>\n\n      <div id={this.state.id}></div>\n      \n    </div>\n  }\n\n  // INIT -------------------------------\n\ncomponentDidMount() {\n  // good for AJAX: fetch, ajax, or subscriptions.\n// invoked once (client-side only).\n  // fires before initial 'render'\n  if (this.props.content) {\n    let html = this.props.content;\n    document.getElementById(this.state.id).innerHTML = html;\n  }\n}\n  \n\n  // Methods -------------------------------\n  \n  showPopupHandler(){\n    alert('TODO: Popup')\n  }\n\n  // Default Props -------------------------------\n  // Set default props\n  static defaultProps = {\n    author: \"Author - Prop Not Defined\",\n    category: \"Category - Prop Not Defined\",\n    dateTime: \"dateTime - Prop Not Defined\",\n    content: \"Content - Prop Not Defined\",\n  }\n\n}","import React, { Component } from 'react'\n\nexport default class CreateNews extends Component {\n    state = {\n        hasExpiration: false\n    };\n    \n  render() {\n    return <div>\n\n        <div>Category</div>\n        <select>\n          <option value=\"Alerts\">Alerts</option>\n          <option value=\"News\">News</option>\n          <option value=\"Announcements\">Announcements</option>\n          <option value=\"Notices\">Notices</option>\n          <option value=\"Events\">Events</option>\n        </select>\n\n        <div>Content</div>\n        {/* TODO: Replace Textarea with rich HTML Editor */}\n        <textarea></textarea>\n\n        <fieldset>\n            <legend>News Expiration Date</legend>\n            <label className='pointer'>\n                <input type=\"checkbox\" id=\"hasExpiration\" checked={this.state.hasExpiration} onChange={this.checkboxHandle} /> Has Expiration Date </label>\n           \n        <div>Date</div>\n\n            <input type=\"datetime-local\" disabled={!this.state.hasExpiration}/>\n\n        </fieldset>\n\n        <input type=\"submit\" value=\"Create News\"/>\n\n    </div>\n  }\n\n  // Methods -------------------------------\n  checkboxHandle = () => {\n      this.setState(\n          {\n            hasExpiration: (! this.state.hasExpiration )\n        }\n    )\n  }\n}","import axios from 'axios'\n\nexport function  setAuthorizationToken (token) {\n        if(token) {\n            axios.defaults.headers.common['authorization'] = `BEARER ${token}`;\n            axios.defaults.headers.common['Content-Type'] = \"application/json;charset=utf-8\"\n            axios.defaults.headers.common['Accept'] = \"application/json\"\n            axios.defaults.headers.common['Access-Control-Allow-Origin'] = \"*\"\n            axios.defaults.headers.get['Content-Type'] = \"application/json;charset=utf-8\"\n            axios.defaults.headers.get['Accept'] = \"application/json\"\n            axios.defaults.headers.get['Access-Control-Allow-Origin'] = \"*\"\n\n            localStorage.setItem('authToken', JSON.stringify(token) )\n        } else {\n            delete axios.defaults.headers.common['authorization'];\n        }\n}\n\nexport default {setAuthorizationToken}\n","// import api from './api';\nimport apiMethods from './apiMethods';\nimport axios from 'axios'\n    // https://my-domain.com/api/  person/\n    // ^domain^                    ^endpoint^\n\n\nexport default class apiPath extends apiMethods {\n   \n    endpoint;\n    axiosConfig; \n\n    // TODO - axiosConfig: provide defult values to axios config, if no config is provided\n    // TODO - add parameter \"relation\" * \n    constructor(endpoint = '', axiosConfig = {}) {\n        // super(endpoint,axiosConfig)\n        super()\n        this.endpoint = endpoint;\n        this.axiosConfig = axiosConfig;\n\n    }\n}","import axios from 'axios'\nimport apiAuth from './apiAuth';\n\nexport default class apiMethods {\n\n    endpoint = null;\n    axiosConfig = null;\n\n    // HTTP --------------------------------------\n\n    getAll(){\n        let t = window['myToken'];\n        this.axiosConfig.defaults.headers.common['Authorization'] = 'BEARER ' + t\n        this.axiosConfig.defaults.headers.common['Content-Type'] = \"application/json\"\n        \n        axios.get(this.axiosConfig.defaults.baseURL + this.endpoint, this.axiosConfig)\n        .then(res => {\n            console.log(res)\n        })\n    }\n\n    getId(id = -1){\n        if ( id === -1 ){\n            console.log('apiMethods.js:getid ' ) // debugger;\n        }\n        axios.get(this.axiosConfig.defaults.baseURL + this.endpoint + id)\n        .then(res => {\n            console.log(res)\n        })\n    }\n    \n    // Auth needed?\n    post(data = {}){\n        axios.post(this.axiosConfig.defaults.baseURL + this.endpoint, data)\n        .then(res => {\n            console.log(res)\n        })\n    }\n\n    // Auth needed?\n    put(data = {}){\n        axios.post(this.axiosConfig.defaults.baseURL + this.endpoint, data)\n        .then(res => {\n            console.log(res)\n        })\n    }\n\n    // REDUX: Gettter, Setters --------------------------------------\n    \n    // Create\n    storeAdd(params) {\n        \n    }\n\n    // Read\n    storeGetId(params) {\n        \n    }\n    \n    // Update\n    storeUpdateId(params) {\n        \n    }\n    \n    // Update\n    storeUpdateIdByKeyValue( id = -1, key='', value ) {\n        \n    }\n    \n    // Delete\n    storeDeleteId(params) {\n        \n    }\n    storeDeleteAll(params) {\n        \n    }\n    \n    // REDUX - Subscription: --------------------------------------\n    // Here component will subscribe and listen for  changes in redux state,\n    // and update when changes happends  \n\n    // TODO: Subscribe to redux\n\n        onStoreChange( callbackFn = ()=>{} ) {\n        \n        }\n\n\n    // Auth--------------------------------------    \n\n    authRegister(userName, fullName, password, passwordConfirm ){\n        let data = {\n            \"userName\": userName,\n            \"fullName\": fullName,\n            \"password\": password,\n            \"passwordConfirm\": password,\n            \"statusActivated\": true,\n            \"statusLocked\": false,\n            \"roles\": [\n                \"contentEditor\"\n            ],\n            \"claims\": [\n                {\n                    \"type\": \"OU\",\n                    \"value\": \"Department2\"\n                },\n                {\n                    \"type\": \"Task\",\n                    \"value\": \"canUpdateProducts\"\n                }\n            ]\n        }\n    \n        let that = this\n        axios.post(this.axiosConfig.defaults.baseURL + this.endpoint, data, this.axiosConfig)\n        .then(res => {\n            console.log(res)\n\n        })\n    }\n\n    authLogin(userName, fullName, password, passwordConfirm ){\n        let data = {\n            \"userName\": userName,\n            \"fullName\": fullName,\n            \"password\": password,\n            \"passwordConfirm\": password,\n            \"statusActivated\": true,\n            \"statusLocked\": false,\n            \"roles\": [\n                \"contentEditor\"\n            ],\n            \"claims\": [\n                {\n                    \"type\": \"OU\",\n                    \"value\": \"Department2\"\n                },\n                {\n                    \"type\": \"Task\",\n                    \"value\": \"canUpdateProducts\"\n                }\n            ]\n        }\n    \n        let that = this\n        axios.post(this.axiosConfig.defaults.baseURL + this.endpoint, data, this.axiosConfig.defaults)\n        .then(res => {\n            console.log(res)\n            apiAuth.setAuthorizationToken( res.data.token)\n            // that.authSetHeaderToken(res.data.token ) \n        })\n    }\n\n\n    me(){\n        let www = 'useraccounts/me/'\n\n        axios.get('https://polar-peak-16816.herokuapp.com/api/useraccounts/me/')\n        .then(res => {\n            console.log(res)\n        })\n       // https://polar-peak-16816.herokuapp.com/api/useraccounts/me/\n    }\n\n}\n\n","import axios from 'axios'\nimport apiPath from './apiPath';\n\n/*\n\napiKing\n\nnew apiPath('https://domain.com/api/', 'sub-route-endpoint/', AxiosConfig)\n\n*/\n\nexport default class api {\n        \n        config = {\n\n            cloudDomain: axios.create({\n                    baseURL: 'https://some-domain.com/api/',\n                    timeout: 1000,\n                    headers: {'X-Custom-Header': 'foobar'}\n                }\n            ),\n\n            testDomain: axios.create({\n                    baseURL: 'https://polar-peak-16816.herokuapp.com/api/',\n                    timeout: 3000,\n                    headers: {\n                        'Accept': 'application/json',\n                        'Access-Control-Allow-Origin': '*',\n                        'Content-Type': 'application/json;charset=utf-8',\n                        'Authorization':'-not defined',\n                        // get:{\n                        //     'Accept': 'application/json',\n                        //     'Access-Control-Allow-Origin': '*',\n                        //     'Content-Type': 'application/json;charset=utf-8',\n                        //     'Authorization':'b'\n                        // }\n                    }\n                }\n            ),\n\n    }\n    constructor() {\n\n        this.useraccountsMe       = new apiPath('useraccounts/me/', this.config.testDomain)\n        this.useraccounts         = new apiPath('useraccounts/', this.config.testDomain)\n        this.useraccountsActive   = new apiPath('useraccounts/active/', this.config.testDomain)\n        this.useraccountsRegister = new apiPath('useraccounts/register/', this.config.testDomain)\n        this.useraccountsLogin    = new apiPath('useraccounts/login/', this.config.testDomain)\n\n        this.persons              = new apiPath('persons/', this.config.testDomain)\n        this.personsprotected     = new apiPath('personsprotected/', this.config.testDomain)\n        this.feed                 = new apiPath('feed/', this.config.testDomain)\n        this.feedActive           = new apiPath('feed/active/', this.config.testDomain)\n        this.feedAlerts           = new apiPath('feed/alerts/', this.config.testDomain)\n        this.feedEvents           = new apiPath('feed/events/', this.config.testDomain)\n        this.feedNews             = new apiPath('feed/news/', this.config.testDomain)\n        this.feedNotice           = new apiPath('feed/notices/', this.config.testDomain)\n        this.textcontent           = new apiPath('textcontent/', this.config.testDomain)\n        this.peopleList           = new apiPath('peopleList/', this.config.testDomain)\n        this.peopleList           = new apiPath('peopleList/', this.config.testDomain)\n\n\n\n\n    }//constructor\n}\n\n","import React, { Component } from 'react';\nimport Card from '../Components/Card';\nimport FeedItem from '../Components/FeedItem';\nimport CreateNews from '../Components/CreateNews';\nimport api from '../api/api';\n// import apiPath from '../api/apiPath';\n\nclass ComponentsOverview extends Component {\n state = {email: 'a@a.dk'};\n\n  render() {\n    return (\n      <div>\n        <h1>Components Overview</h1>\n\n        <hr />\n\n        <hr />\n        <h1>Card</h1>\n        <Card>My card</Card>\n\n        <hr />\n        <h1>Card + CardFeed</h1>\n        <Card>\n          <FeedItem\n            id='5'\n            author='Martin'\n            category='Alerts'\n            dateTime='2019-12-27'\n            content='<h1>Lorem html</h1> <u>Ipsum underline</u><h3>H3 tag</h3><strong>bold text</strong> <b>This is the content</b> Lorem <i>Ipsim</i> <u>rich html</u>'\n          >\n          </FeedItem>\n        </Card>\n\n        <hr />\n        <h1>Card + CardFeed (no props defined)</h1>\n        <Card>\n          <FeedItem>\n          </FeedItem>\n        </Card>\n\n        <hr />\n        <h1>CreateNews</h1>\n        <Card>\n          <CreateNews />\n        </Card>\n\n        <hr/>\n        <h1>Axios</h1>\n        <input type='text' name=\"name\" onChange={(e)=>this.setState({email: e.target.value})} value={this.state.email}></input>\n        <button onClick={this.axiosRegister}>Axios Register Account</button>\n        <button onClick={this.axiosLogin}>Axios Login</button>\n        <button onClick={this.axiosMe}>Axios /ME</button>\n\n      </div>\n    );\n  }\n  //  -------------------------------\n  axiosRegister = () =>  {\n    let db = new api();\n    let email= this.state.email;\n    db.useraccountsRegister.authRegister(email, 'apple123')\n  }\n  axiosLogin = () =>  {\n    let db = new api();\n    db.useraccountsLogin.authLogin(this.state.email, 'apple123')\n  }\n  axiosMe = () =>  {\n    let db = new api();\n    db.useraccountsMe.me()\n  }\n\n  handleChange(event) {\n    console.log('ComponentsOverview.jsx:74|', event.target) // debugger\n    this.setState({email: event.target.email});\n  }\n  //  -------------------------------\n\n\n}\n\nexport default ComponentsOverview;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nimport Navigation from './Components/Navigation';\n\nimport Login from './Pages/Login';\nimport Home from './Pages/Home';\nimport Register from './Pages/Register';\nimport AccountActivation from './Pages/AccountActivation';\nimport Settings from './Pages/Settings';\n\nimport Alerts from './Pages/Alerts';\nimport Emergency from './Pages/Emergency';\nimport Feed from './Pages/Feed';\nimport Location from './Pages/Location';\nimport PeopleList from './Pages/PeopleList';\n\nimport ComponentsOverview from './Pages/ComponentsOverview';\n\nimport api from './api/api';\nexport const db = new api();\n\nconst isAuthenticated = localStorage.getItem(\"authToken\");\n\nconst Router = () =>  {\n    return (\n      <BrowserRouter>\n        <div>\n        <Navigation auth={isAuthenticated} />\n          <Switch>\n\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            {/* When user click activate account in email */}\n            <Route path=\"/account-activation\" component={AccountActivation} />\n\n            <Route path=\"/settings\" component={Settings} />\n\n            <Route path=\"/location\" component={Location} />\n            <Route path=\"/emergency\" component={Emergency} />\n            <Route path=\"/alerts\" component={Alerts} />\n            <Route path=\"/people-list\" component={PeopleList} />\n            {/* Inbound Communication (news, announcements) */}\n            <Route path=\"/feed\" component={Feed} />\n\n            <Route path=\"/components-overview\" component={ComponentsOverview} />\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n\n  export default Router;","import React from 'react';\nimport './App.css';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/customServiceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}